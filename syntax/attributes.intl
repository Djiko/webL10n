# vim: ft=yaml:ts=4:sw=4
# handling element attributes like in this LOL example:
#   <buttonClick "Click me"
#       info: "{{buttonClick.title}}"
#       title: "use Ctrl+{{buttonClick.accesskey}}"
#       accesskey: "c">

# flat syntax: properties-like (recommended)
buttonClick: Click me
buttonClick.info: {{buttonClick.title}}
buttonClick.title: use Ctrl+{{buttonClick.accesskey}}
buttonClick.accesskey: c

# variant #1: YAML-like
#  - the "~" token identifies element content
#  - the "." token identifies element attributes
#  - entity name can be ommitted from {{.attribute}} references
#  - can be used along with the recommended syntax
#  - suitable for gettext-like string identifiers
buttonClick:
    ~: Click me
    .info: {{.title}}
    .title: use Ctrl+{{.accesskey}}
    .accesskey: c

# variant #2: LOL-like (not YAML-compliant)
#  - acceptable shortcut for basic cases (= single-line string content)
#  - tricky to use with multiline content, indexes, structured data…
buttonClick: Click me
    .info: {{.title}}
    .title: use Ctrl+{{.accesskey}}
    .accesskey: c


# multiline case:
buttonClick: |
    Click me,
    click me,
    click me!
buttonClick.info: {{buttonClick.title}}
buttonClick.title: |
    use Ctrl+{{buttonClick.accesskey}}
    or we’re all going to die!
buttonClick.accesskey: c

# variant #1:
buttonClick:
    ~: |
        Click me,
        click me,
        click me!
    .info: {{.title}}
    .title: |
        use Ctrl+{{.accesskey}}
        or we’re all going to die!
    .accesskey: c

# variant #2: N/A — use variant #1 instead

